
mixin Badge(method)
    //- Draw a badge for a given HTTP method
    case method
        when 'GET'
            span.badge.get: i.fa.fa-arrow-down
        when 'HEAD'
            span.badge.head: i.fa.fa-info-circle
        when 'OPTIONS'
            span.badge.options: i.fa.fa-dot-circle-o
        when 'POST'
            span.badge.post: i.fa.fa-plus
        when 'PUT'
            span.badge.put: i.fa.fa-pencil
        when 'PATCH'
            span.badge.patch: i.fa.fa-pencil
        when 'DELETE'
            span.badge.delete: i.fa.fa-times
        default
            span.badge: i.fa.fa-dot-circle-o

mixin Nav()
    //- Draw a navigation bar, which includes links to individual
    //- resources and actions.
    nav
        each resourceGroup in self.api.resourceGroups || []
            .resource-group
                .heading
                  .chevron
                    i.open.fa.fa-angle-down
                  a(href='#' + resourceGroup.name)!= resourceGroup.name || 'Resource Group'
                .collapse-content
                  ul
                    each item in resourceGroup.navItems || []
                      li
                        a(href=item[1])!= item[0]
                    each resource in resourceGroup.resources || []
                      li
                        - var resourceId = resourceGroup.name + '-' + resource.name
                        a(href='#' + resourceId)
                            +Badge(resource.method)
                            != resource.name
   

mixin Parameters(params)
    //- Draw a definition list of parameter names, types, defaults,
    //- examples and descriptions.
    .title
        strong Parameters
        .collapse-button.show
            span.close Hide
            span.open Show
    .collapse-content
        table.block-table
            thead
                tr
                    th 参数名
                    th 类型
                    th 是否必填
                    th 描述
            tbody
            each pa in params    
                tr
                    td= pa.name
                    td= pa.type
                    td= pa.required
                    td= pa.description
               

mixin RequestResponse(title, request, collapse)
    .title
        strong
            = title
            if request.name
                | &nbsp;&nbsp;
                code= request.name
        if collapse && request.hasContent
            .collapse-button
                span.close Hide
                span.open Show
    +RequestResponseBody(request, collapse)


mixin RequestResponseBody(request, collapse, showBlank)
    if request.hasContent || showBlank
        div(class=collapse ? 'collapse-content' : ''): .inner
            if request.description
                .description!= self.markdown(request.description)

            if Object.keys(request.headers).length
                h5 Headers
                pre: code
                    each item, index in request.headers
                        != self.highlight(item.name + ': ' + item.value, 'http')
                        if index < request.headers.length - 1
                          br
                div(style="height: 1px;")
            if request.body
                h5 Body
                pre: code
                    != self.highlight(request.body, null, ['json', 'yaml', 'xml', 'javascript'])
                div(style="height: 1px;")

            if !request.hasContent
                .description.text-muted This response has no content.
                div(style="height: 1px;")


mixin Examples(resourceGroup, resource, action)
    each example in action.examples
        each request in example.requests
            +RequestResponse('Request', request, true)
        each response in example.responses
            +RequestResponse('Response', response, true)

mixin Content()
    //- Page header and API description
    header
        h1#top!= self.api.name || 'API Documentation'

    if self.api.description
        != self.markdown(self.api.description)

    //- Loop through and display information about all the resource
    //- groups, resources, and actions.
    each resourceGroup in self.api.resourceGroups || []
        section.resource-group(id=resourceGroup.name)
            h2.group-heading
                != resourceGroup.name || 'Resource Group'
                = " "
                a.permalink(href='#' + resourceGroup.name) &para;
            
            if resourceGroup.description
                != self.markdown(self.api.description)

            each resource in resourceGroup.resources || []
                - var resourceId = resourceGroup.name + '-' + resource.name

                .resource(id=resourceId)

                    .action(class=resource.methodLower)
                        h4.action-heading
                            a.method(class=resource.methodLower)= resource.method
                            code.uri= resource.uriTemplate
                            span.name
                                != resource.name
                                = " "
                                a.permalink(href='#' + resourceId) &para;
                        
                        if resource.description
                            != self.markdown(resource.description)

                        //- A list of sub-sections for parameters, requests
                        //- and responses.
                        if resource.parameters.length
                            +Parameters(resource.parameters)

                        if resource.responses.length
                            each response in resource.responses
                                strong Response
                                pre: code
                                    !=response.bodyContent

