
mixin Badge(method)
    //- Draw a badge for a given HTTP method
    case method
        when 'GET'
            span.badge.get: i.fa.fa-arrow-down
        when 'HEAD'
            span.badge.head: i.fa.fa-info-circle
        when 'OPTIONS'
            span.badge.options: i.fa.fa-dot-circle-o
        when 'POST'
            span.badge.post: i.fa.fa-plus
        when 'PUT'
            span.badge.put: i.fa.fa-pencil
        when 'PATCH'
            span.badge.patch: i.fa.fa-pencil
        when 'DELETE'
            span.badge.delete: i.fa.fa-times
        default
            span.badge: i.fa.fa-dot-circle-o

mixin Menu()
    div.menu 
        span= self.api.name
        if self.menu.length > 1
            span.menu-icon: i.fa.fa-bars
            div.menu-items
                each item in self.menu
                    a(href=item.path, class=self.api.name===item.name ? 'active': '').menu-item= item.name


mixin Nav()
    //- Draw a navigation bar, which includes links to individual
    //- resources and actions.
    nav.nav-fixed
        each resourceGroup in self.api.resourceGroups || []
            - var resources = resourceGroup.resources || []
            div(class= resources.length ? '' : 'is-empty').resource-group
                .heading
                  .chevron
                    i.open.fa.fa-angle-down
                  a(href='#' + resourceGroup.name)!= resourceGroup.name || 'Resource Group'
                .collapse-content
                  ul
                    each resource in resources || []
                      li
                        - var resourceId = resourceGroup.name + '-' + resource.name
                        a(href='#' + resourceId)
                            +Badge(resource.method)
                            != resource.name
   

mixin Parameters(params)
    //- Draw a definition list of parameter names, types, defaults,
    //- examples and descriptions.
    .title
        strong Parameters
        .collapse-button.show
            span.close Hide
            span.open Show
    .collapse-content
        dl.inner.params-inner: each param in params || []
            dt= param.name
            dd
                code= param.type || 'string'
                | &nbsp;&nbsp;
                if param.required
                    span.required (required)
                else
                    span (optional)
                | &nbsp;&nbsp;
                span.text-muted.example
                    != param.description
                //- 是否是enums类型    
                if param.enums
                    p.choices
                        strong 可枚举值:&nbsp;
                        each value in param.enums
                            code= value
                            = ' '


mixin Content()
    //- Page header and API description
    header
        h1#top!= self.api.name || 'API Documentation'

    if self.api.description
        != self.markdown(self.api.description)

    //- Loop through and display information about all the resource
    //- groups, resources, and actions.
    each resourceGroup in self.api.resourceGroups || []
        section.resource-group(id=resourceGroup.name)
            h2.group-heading
                != resourceGroup.name || 'Resource Group'
                = " "
                a.permalink(href='#' + resourceGroup.name) &para;
            
            if resourceGroup.description
                != self.markdown(resourceGroup.description)

            each resource in resourceGroup.resources || []
                - var resourceId = resourceGroup.name + '-' + resource.name

                .resource(id=resourceId)

                    .action(class=resource.methodLower)
                        h4.action-heading
                            a.method(class=resource.methodLower)= resource.method
                            code.uri
                                if self.api.metadata.BASE_URI
                                    b= self.api.metadata.BASE_URI
                                = resource.uriTemplate
                            span.name
                                != resource.name
                                = " "
                                a.permalink(href='#' + resourceId) &para;
                        
                        //- description
                        if resource.description
                            != self.markdown(resource.description)

                        //- parameters
                        if resource.parameters.length
                            +Parameters(resource.parameters)
                        
                        //- request
                        if resource.request.hasContent
                            strong Request
                            pre: code
                                != resource.request.body                 
                        
                        //- response
                        if resource.response.hasContent
                            .title
                                strong Response
                                    = "  "
                                    code= resource.response.status
                                .collapse-button
                                    span.close Hide
                                    span.open Show
                            .collapse-content      
                                pre: code
                                    != self.highlight(resource.response.body, null, ['json', 'yaml', 'xml', 'javascript'])

                                
